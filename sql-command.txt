1. Tạo bảng users
CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    alias_name VARCHAR(255) NOT NULL,
    username VARCHAR(50) UNIQUE NOT NULL,
    password TEXT, -- Mật khẩu sẽ được hash nên dùng TEXT
    branch INT, -- Có thể dùng FOREIGN KEY nếu có bảng branches
    role VARCHAR(50) NOT NULL CHECK (role IN ('admin', 'staff')),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

2. Tạo bảng products
CREATE TABLE products (
    id SERIAL PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    product_code VARCHAR(50) UNIQUE NOT NULL,
    unit_price INT NOT NULL CHECK (unit_price >= 0),
    branch_id INT NOT NULL,
    image TEXT
);

3. Tạo bảng branches
CREATE TABLE branches (
    id SERIAL PRIMARY KEY,
    branch_name VARCHAR(255) NOT NULL,
    alias_branch VARCHAR(255),
    address TEXT
);

4. Tạo bảng invoices
CREATE TABLE invoices (
    id SERIAL PRIMARY KEY,
    invoice_name VARCHAR(50) NOT NULL UNIQUE,
    customer_id INT NOT NULL,
    branch_id INT NOT NULL,
    amount INT NOT NULL,
    paid_amount INT NOT NULL DEFAULT 0,
    pay_method INT,
    status_id INT NOT NULL,
    created_by INT NOT NULL,
    confirmed_by INT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
Thêm cột discount

5. Bảng customers
CREATE TABLE customers (
    id SERIAL PRIMARY KEY,
    customer_name VARCHAR(125) UNIQUE NOT NULL,
    customer_phone VARCHAR(15),
    customer_address TEXT,
    branch_id INT NOT NULL
);

6. Bảng statuses
CREATE TABLE statuses (
    id SERIAL PRIMARY KEY,
    status_name VARCHAR(50)
);

7. Bảng pay_methods
CREATE TABLE pay_methods (
    id SERIAL PRIMARY KEY,
    method_name VARCHAR(50)
);

8. Bảng invoice_coworkers
CREATE TABLE invoice_coworkers (
    id SERIAL PRIMARY KEY,
    invoice_id INT,
    user_id INT
);

9. Bảng invoice_items
ALTER TABLE invoice_items
ALTER COLUMN quantity TYPE DECIMAL(10,2);


10. Tạo trigger, function tạo tên cho đơn hàng - đã bỏ cách này
-- Tạo function để tự động sinh `invoice_name`
CREATE OR REPLACE FUNCTION generate_invoice_name()
RETURNS TRIGGER AS $$
BEGIN
    -- Lấy ngày hiện tại theo định dạng DDMMYY
    NEW.invoice_name := CONCAT(
        'DH',
        TO_CHAR(NOW(), 'DDMMYY'), -- Ngày hiện tại (VD: 170224)
        LPAD(nextval('invoices_id_seq')::TEXT, 4, '0')  -- Lấy ID tự tăng và thêm số 0
    );
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- Tạo trigger gọi function khi insert
CREATE TRIGGER set_invoice_name
BEFORE INSERT ON invoices
FOR EACH ROW
EXECUTE FUNCTION generate_invoice_name();